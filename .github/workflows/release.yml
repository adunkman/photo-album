name: Release

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      SITE_TITLE: ${{ secrets.SITE_TITLE }}
      SITE_LANGUAGE_CODE: ${{ secrets.SITE_LANGUAGE_CODE }}
      SITE_BASEURL: ${{ secrets.SITE_BASEURL }}
      DOMAIN: ${{ secrets.DOMAIN }}
      HUGO_ENV: ${{ secrets.HUGO_ENV }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: terraform/.terraform
          key: v1-${{ hashFiles('terraform/.terraform.lock.hcl') }}

      - name: Remove example photos
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make photos-remove-examples

      - name: Download photos from S3
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make photos-download
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build site
        run: make build

      - name: Scan infrastructure for security issues
        run: make tfsec

      - name: Initialize terraform
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-init
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SITE_USERNAME: ${{ secrets.SITE_USERNAME }}
          SITE_PASSWORD: ${{ secrets.SITE_PASSWORD }}

      - name: Plan infrastructure changes
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-plan
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SITE_USERNAME: ${{ secrets.SITE_USERNAME }}
          SITE_PASSWORD: ${{ secrets.SITE_PASSWORD }}

      - name: Apply infrastructure changes
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make terraform-apply
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SITE_USERNAME: ${{ secrets.SITE_USERNAME }}
          SITE_PASSWORD: ${{ secrets.SITE_PASSWORD }}

      - name: Deploy site
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: make deploy
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
